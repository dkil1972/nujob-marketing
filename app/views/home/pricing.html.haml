.pricing-box.text-center
  %p.font-38.font-white
    %b= content_item("Pricing", "pricing_main_title")
  %p.strap-line= content_item("Pricing", "pricing_sub_title")
  .div-plan
    .plan.plan-first
      = render "plan",
        :title => content_item("Pricing", "plan_1_title"),
        :price => 79,
        :manager => "1",
        :team_member => "7",
        :roles => "2",
        :hires => "∞"
    .plan.plan-second
      = render "plan",
        :title => content_item("Pricing", "plan_2_title"),
        :price => 299,
        :manager => "1",
        :team_member => "40",
        :roles => "5",
        :hires => "∞"
    .plan.plan-last
      = render "plan",
        :title => content_item("Pricing", "plan_3_title"),
        :price => 499,
        :manager => "3",
        :team_member => "∞",
        :roles => "∞",
        :hires => "∞"
    .clear
  .not_sure_plan
    Not sure which plan? Decide later! There are no limits on trial accounts.
    %br
    %br
    %button.btn.main-call
      %b=link_to 'Start trial now', contact_url(:reason => 'trial') 
  .clear
  %br
  .custom_plans
    %p=link_to('contact us for enterprise plans', contact_url)
%div{"ng-app" => "iFind"}
  .pricing-vs-div.text-center{"ng-controller" => "pricing"}
    %p.font-24= t(".all_plans")
    .circle-image.div-center
      = image_tag('/assets/pricingHire.png', :size => "50x50")
      %p= t(".hire")
    %p.font-38= t(".recruiters_vs_nujob").html_safe
    .input-info
      .div-inline
        %p.text-left.font-20= content_item("Pricing", "salary")
        .input-with-addon
          %span £
          %hr
          = text_field_tag :salary, 4500, :class => "form-control", :onkeypress=>"return isNumberKey(event)","ng-model"=>"average_salary"
      .div-inline
        %p.text-left.font-20= content_item("Pricing", "recruiter_margin")
        .input-with-addon
          %span %
          %hr
          = text_field_tag :margin, 15, :class => "form-control", :onkeypress=>"return isNumberKey(event)","ng-model"=>"recruiter_percentage"
      .div-inline
        %div
          %p.text-left.font-20= t(".plan")
          = select_tag :plan, options_for_select([ 49, 299, 499, 1599 ], 299), {:class => "selectpicker", "ng-model"=>"plan_price"}
    .div-vs
      .comparison-slider
        %slider#developers{"model"=>"number_of_hires"}
        /.slider-range
        /%span.range.dev1 5
        /%span.range.dev2 10
        /%span.range.dev3 15
        /%span.range.dev4 20
        /%span.range.dev5 25
      .comparison-slider
        %slider#months{"model"=>"number_of_months"}
        /.slider-range
        /%span.range.month1 3
        /%span.range.month2 6
        /%span.range.month3 9
      .pricing-bad-hire
        %img{:src => "/assets/Badprice.png", :size => "84x84"}
        %p= t(".bad_hire_title")
        %div
          %b.font-24 £
          %b.font-42 {{total_cost_bad | number:0}}
      .pricing-good-hire
        %img{:src => "/assets/Goodprice.png", :size => "84x84"}
        %p
          %span= content_item("Pricing", "total_cost_with_nujob")
          %div
            %b.font-24 £
            %b.font-42 {{total_cost_good | number:0}}
        %p.font-24 
          %b (
          %b= content_item("Pricing", "total_saving_text")
          %b.font-24 £ {{saving_with_nujob | number:0}}
          %b )
      .clear
:javascript
  $(".selectpicker").selectpicker();
  $('#developers').slider({
    min: 1,
    max: 30,
    step: 1,
    value: 1,
    handle: 'square',
    placeHolder: "#{t('.developers_number')}"
  });
  $('#months').slider({
    min: 1,
    max: 12,
    step: 1,
    value: 0,
    handle: 'square',
    placeHolder: "#{t('.month_number')}"
  });  
  function isNumberKey(evt){
    var charCode = (evt.which) ? evt.which : event.keyCode;
    return !(charCode > 31 && (charCode < 48 || charCode > 57));
  };
  function pricing($scope) {
    $scope.number_of_hires = 1;
    $scope.number_of_months = 1;
    $scope.average_salary = 45000;
    $scope.recruiter_percentage = 15;
    $scope.plan_price = 299;
    
    $scope.change = function() {
      $scope.recruiter_cost_per_hire = $scope.average_salary * $scope.recruiter_percentage / 100;
      $scope.total_cost_bad = $scope.number_of_hires * $scope.recruiter_cost_per_hire;
      $scope.total_cost_good = $scope.plan_price * $scope.number_of_months;
      $scope.saving_with_nujob = $scope.total_cost_bad - $scope.total_cost_good;
      $scope.saving_with_nujob_per_month = $scope.saving_with_nujob / $scope.number_of_months;
      if ($scope.saving_with_nujob < 0) {
        $scope.saving_with_nujob = 0;
      };
      if ($scope.saving_with_nujob_per_month < 0) {
        $scope.saving_with_nujob_per_month = 0;
      };
      if ($scope.saving_with_nujob_per_month == NaN) {
        $scope.saving_with_nujob_per_month = 0;
      };
    };
    $scope.$watchCollection('[number_of_hires, number_of_months, average_salary, recruiter_percentage, plan_price]',function(){
      $scope.change();
    });
  };

  var iFind = angular.module('iFind',[]);

  iFind.directive('slider', function ($parse) {
      return {
        restrict: 'E',
        replace: true,
        template: '<input type="text" />',
        link: function ($scope, element, attrs) {
          var model = $parse(attrs.model);
          var slider = $(element[0]).slider();

          slider.on('slide', function(ev) {
            model.assign($scope, ev.value);
            $scope.$apply();
          });
        }
      }
  });
